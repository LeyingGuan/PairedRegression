// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// permutation_PREGSseparate
List permutation_PREGSseparate(const arma::vec& x, const arma::mat& Y, arma::mat& Z, const int B);
RcppExport SEXP _PREGS_permutation_PREGSseparate(SEXP xSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(permutation_PREGSseparate(x, Y, Z, B));
    return rcpp_result_gen;
END_RCPP
}
// permutation_PREGSjoint
List permutation_PREGSjoint(const arma::vec& x, const arma::mat& Y, const arma::mat& Z, const int B);
RcppExport SEXP _PREGS_permutation_PREGSjoint(SEXP xSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(permutation_PREGSjoint(x, Y, Z, B));
    return rcpp_result_gen;
END_RCPP
}
// permutation_FL
List permutation_FL(const arma::vec& x, const arma::mat& Y, arma::mat& Z, const int B);
RcppExport SEXP _PREGS_permutation_FL(SEXP xSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(permutation_FL(x, Y, Z, B));
    return rcpp_result_gen;
END_RCPP
}
// permutation_vanilla
List permutation_vanilla(const arma::vec& x, const arma::mat& Y, arma::mat& Z, const int B);
RcppExport SEXP _PREGS_permutation_vanilla(SEXP xSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(permutation_vanilla(x, Y, Z, B));
    return rcpp_result_gen;
END_RCPP
}
